package coverage;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

public abstract class SubjectExecutor {
    protected static String packagePrefix = "";
    protected static String originalFilePath = "classes";
    protected static List<String> inputList = new ArrayList<>();
    protected static String inputFileName = "";

    public void wrapExecute() throws IOException, ClassNotFoundException {
        assert (!originalFilePath.isEmpty());
        assert (!inputList.isEmpty() || !inputFileName.isEmpty());

        if (inputList.isEmpty()){
            try {
                inputList = ReadFromFile(inputFileName);
            } catch (ClassNotFoundException e) {
                System.err.println("input file must be generated by ObjectOutputStream");
                throw e;
            }
        }

        String coverageFile = new File(inputFileName).getPath() + ".csv";
        CoverageReporter coverageReporter = new CoverageReporter(originalFilePath, packagePrefix, coverageFile);

        ignoreExecOutputGenInputListCoverage(inputList, coverageReporter);
        coverageReporter.close();
    }

    private void ignoreExecOutputGenInputListCoverage(List<String> inputList, CoverageReporter coverageReporter) throws IOException {
        PrintStream coverageStream = System.out;
        System.setOut(new PrintStream(new NullOutputStream()));
        genInputListCoverage(inputList, coverageReporter, coverageStream);
        System.setOut(coverageStream);
    }

    private void genInputListCoverage(List<String> inputList, CoverageReporter coverageReporter, PrintStream coverageStream) throws IOException {
        int i = 0;
        int total = inputList.size();
        for (String input : inputList){
            try {
                execute(input);
            }catch (Exception e){}
            i++;
            coverageStream.printf("%d of %d inputs, " + coverageReporter.getCoverage() + "\n", i, total);
        }
        coverageStream.println(coverageReporter.getTotal());
    }

    public abstract void execute(String input);

    public List<String> ReadFromFile(String fileName) throws IOException, ClassNotFoundException {
        List<String> S_list= new ArrayList<String>();
        File file=new File(fileName);
        if(file.exists()){
            ObjectInputStream osi=new ObjectInputStream(new FileInputStream(file));
            S_list=(ArrayList<String>) osi.readObject();
            osi.close();
        }else {
            throw new FileNotFoundException(fileName + " not found! ");
        }

        return S_list;
    }

}
